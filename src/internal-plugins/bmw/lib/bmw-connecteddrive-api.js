"use strict";var e=require("axios"),t=require("querystring"),i=require("moment"),n=require("axios-retry");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=a(e),s=a(t),o=a(i),g=a(n);const h={FRONTSIDE:"FRONTSIDE",FRONT:"FRONT",REARSIDE:"REARSIDE",REAR:"REAR",SIDE:"SIDE",DASHBOARD:"DASHBOARD",DRIVERDOOR:"DRIVERDOOR",REARBIRDSEYE:"REARBIRDSEYE"},c={us:"b2vapi.bmwgroup.us",eu:"b2vapi.bmwgroup.com",cn:"b2vapi.bmwgroup.cn:8592"};class u{constructor(e){this.region=e,this.host=(e=>{if(c[e])return c[e];throw new Error("Unsupported region. Supported values are us|eu|cn")})(e)}getHost(){return this.host}getAuthURL(){return`https://${this.host}/gcdm/oauth/token`}getBaseURL(){return`https://${this.host}/webapi/v1`}getVehiclesURL(){return`${this.getBaseURL()}/user/vehicles`}getVehicleVinURL(e){return`${this.getVehiclesURL()}/${e}`}getVehicleStatusURL(e){return`${this.getVehicleVinURL(e)}/status`}getRemoteServiceStatusURL(e,t){return`${this.getVehicleVinURL(e)}/serviceExecutionStatus?serviceType=${t}`}getRemoteServiceURL(e){return`${this.getVehicleVinURL(e)}/executeService`}getVehicleImage(e,t,i,n){return`${this.getVehicleVinURL(e)}/image?width=${t}&height=${i}&view=${n}`}}const l=(e={})=>({description:e.cbsDescription,dueDate:e.cbsDueDate?o.default(e.cbsDueDate,"YYYY-MM"):null,remainingMileage:e.cbsRemainingMileage,state:e.cbsState,type:e.cbsType});class d{constructor(e,t){this.originalData=e,this.BMWURLs=new u(t.region),this.API=t,this.images={},this.status=null}get vin(){return this.originalData.vin}get model(){return this.originalData.model}async getStatus(e){if(this.status&&!e)return{...this.status,cached:!0};const{vehicleStatus:t}=await this.API.requestWithAuth(this.BMWURLs.getVehicleStatusURL(this.vin));return this.status=((e={})=>({digitalChargingServiceActivation:e.DCS_CCH_Activation,digitalChargingServiceOngoing:e.DCS_CCH_Ongoing,conditionBasedServicingData:e.cbsData?e.cbsData.map(l):[],chargingConnectionType:e.chargingConnectionType,chargingLevelHv:e.chargingLevelHv,chargingStatus:e.chargingStatus,checkControlMessages:e.checkControlMessages,connectionStatus:e.connectionStatus,doorDriverFront:e.doorDriverFront,doorDriverRear:e.doorDriverRear,doorLockState:e.doorLockState,doorPassengerFront:e.doorPassengerFront,doorPassengerRear:e.doorPassengerRear,hood:e.hood,internalClock:e.internalDataTimeUTC?o.default(e.internalDataTimeUTC):null,lastChargingEndReason:e.lastChargingEndReason,lastChargingEndResult:e.lastChargingEndResult,maxRangeElectric:e.maxRangeElectric,maxRangeElectricMls:e.maxRangeElectricMls,mileage:e.mileage,parkingLight:e.parkingLight,position:e.position,positionLight:e.positionLight,rearWindow:e.rearWindow,remainingFuel:e.remainingFuel,remainingRangeElectric:e.remainingRangeElectric,remainingRangeElectricMls:e.remainingRangeElectricMls,remainingRangeFuel:e.remainingRangeFuel,remainingRangeFuelMls:e.remainingRangeFuelMls,remainingRangeTotal:e.remainingRangeFuel+e.remainingRangeElectric,remainingRangeTotalMls:e.remainingRangeFuelMls+e.remainingRangeElectricMls,singleImmediateCharging:e.singleImmediateCharging,trunk:e.trunk,updateReason:e.updateReason,updateTime:e.updateTime?o.default(e.updateTime):null,vehicleCountry:e.vehicleCountry,vin:e.vin,windowDriverFront:e.windowDriverFront,windowDriverRear:e.windowDriverRear,windowPassengerFront:e.windowPassengerFront,windowPassengerRear:e.windowPassengerRear,cached:!1}))(t),this.status}async getImage(e=400,t=400,i=h.FRONTSIDE){if(this.images[`${i}:${e}:${t}`])return this.images[`${i}:${e}:${t}`];const n=await this.API.requestWithAuth(this.BMWURLs.getVehicleImage(this.vin,e,t,i),{overwriteHeaders:{Accept:"image/png"},responseType:"arraybuffer"});return this.images[`${i}:${e}:${t}`]=`data:image/png;base64,${Buffer.from(n,"binary").toString("base64")}`,this.images[`${i}:${e}:${t}`]}get name(){const{yearOfConstruction:e,model:t,bodytype:i,brand:n}=this.originalData;return`${e} ${n} ${i} ${t}`}}var R=new class{init(e){this.debug=e}log(...e){this.debug&&console.log("[BMWStatus]:",...e)}};g.default(r.default,{retries:3});const m=new class{constructor(){this.initialized=!1}async init({region:e,username:t,password:i,debug:n=!1,skipVehicles:a=!1}){if(!e||!t||!i)throw new Error("You must specify all the required parameters (region, username, password)");return this.initialized=!0,this.region=e,this.username=t,this.password=i,this.vehicles=null,this.BMWURLs=new u(e),this.oauthToken=null,this.refreshToken=null,this.tokenExpiresAt=null,R.init(n),R.log("initialized API with",{region:e,username:t,password:i,debug:n}),a||await this.getVehicles(),!0}async requestWithAuth(e,{overwriteHeaders:t={},method:i="GET",postData:n={},...a}={}){if(!this.initialized)throw new Error("You called a function before init()");R.log("making request",e),(!this.oauthToken||this.tokenExpiresAt&&o.default().isAfter(this.tokenExpiresAt))&&(await this.getToken(),await((e=0)=>new Promise((t=>setTimeout(t,e))))(200));const s={"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json",Authorization:`Bearer ${this.oauthToken}`,...t};let g;g="GET"===i?await r.default.get(e,{headers:s,...a}):await r.default.post(e,n,{headers:s,...a});const{data:h}=g;return R.log("request response",h),h}async getToken(){if(!this.initialized)throw new Error("You called a function before init()");R.log("getting token");const{username:e,password:t}=this,i=s.default.stringify({grant_type:"password",scope:"authenticate_user vehicle_data remote_services",username:e,password:t}),n={Authorization:"Basic blF2NkNxdHhKdVhXUDc0eGYzQ0p3VUVQOjF6REh4NnVuNGNEanliTEVOTjNreWZ1bVgya0VZaWdXUGNRcGR2RFJwSUJrN3JPSg==",Credentials:"nQv6CqtxJuXWP74xf3CJwUEP:1zDHx6un4cDjybLENN3kyfumX2kEYigWPcQpdvDRpIBk7rOJ"};"eu"==this.region||"us"==this.region?n.Authorization="Basic ZDc2NmI1MzctYTY1NC00Y2JkLWEzZGMtMGNhNTY3MmQ3ZjhkOjE1ZjY5N2Y2LWE1ZDUtNGNhZC05OWQ5LTNhMTViYzdmMzk3Mw==":"cn"==this.region&&(n.Authorization="Basic blF2NkNxdHhKdVhXUDc0eGYzQ0p3VUVQOjF6REh4NnVuNGNEanliTEVOTjNreWZ1bVgya0VZaWdXUGNRcGR2RFJwSUJrN3JPSg=="),R.log("token data",{postData:i,headers:n});const{data:a}=await r.default.post(this.BMWURLs.getAuthURL(),i,{headers:n});R.log("token response",{data:a});const{access_token:g,expires_in:h,refresh_token:c}=a;this.oauthToken=g,this.refreshToken=c,this.tokenExpiresAt=o.default().add(h,"seconds")}async getVehicles(e=!1){if(!this.initialized)throw new Error("You called a function before init()");if(this.vehicles&&!e)return this.vehicles;const{vehicles:t}=await this.requestWithAuth(this.BMWURLs.getVehiclesURL());return t&&(this.vehicles=t.map((e=>new d(e,this)))),this.vehicles}};m.VEHICLE_VIEWS=h,module.exports=m;
